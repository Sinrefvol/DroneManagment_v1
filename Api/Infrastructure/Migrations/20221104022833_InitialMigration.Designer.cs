// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Infrastructure.Migrations
{
    [DbContext(typeof(DroneContext))]
    [Migration("20221104022833_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.AggregatesModel.DroneAggregate.Drone", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("DistanceCovered")
                        .HasColumnType("float");

                    b.Property<bool>("OnMaintainance")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ScheduledMaintainance")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("drones", (string)null);
                });

            modelBuilder.Entity("Domain.AggregatesModel.DroneAggregate.Drone", b =>
                {
                    b.OwnsOne("Domain.AggregatesModel.DroneAggregate.DroneModel", "DroneModel", b1 =>
                        {
                            b1.Property<Guid>("DroneId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Name");

                            b1.Property<string>("SerialNumber")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("SerialNumber");

                            b1.HasKey("DroneId");

                            b1.ToTable("drones");

                            b1.WithOwner()
                                .HasForeignKey("DroneId");
                        });

                    b.Navigation("DroneModel")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
